name: Docker Publish

on:
  push:
    branches: [ "main", "master" ]
    tags: [ "v*", "*.*.*" ]
  workflow_dispatch:

env:
  IMAGE_NAME: drivesale-api
  REGISTRY: docker.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Detect push configuration
        id: cfg
        shell: bash
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          set -euo pipefail
          ns="${GITHUB_REPOSITORY_OWNER,,}"
          should_push="false"
          if [[ -n "${DOCKERHUB_USERNAME:-}" && -n "${DOCKERHUB_TOKEN:-}" ]]; then
            ns="$DOCKERHUB_USERNAME"
            should_push="true"
          fi
          echo "namespace=$ns" >> "$GITHUB_OUTPUT"
          echo "should_push=$should_push" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        if: ${{ steps.cfg.outputs.should_push == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.cfg.outputs.namespace }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: src/WebApi/Dockerfile
          push: ${{ github.event_name != 'pull_request' && steps.cfg.outputs.should_push == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
